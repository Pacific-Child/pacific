// Color utility classes
// -> generated from the color tokens
@use 'sass:map';
@use '../tokens/color';

:root {
	@each $role, $value in map.get(color.$palette, 'light') {
		--color-#{$role}: #{$value};
	}
}

@each $role, $value in map.get(color.$palette, 'light') {
	.u-color-fg-#{$role} {
		@include color.add($role);
	}

	.u-color-bg-#{$role} {
		@include color.add-bg($role);
	}
}

@each $theme, $roles in color.$palette {
	.u-theme-#{$theme} {
		@each $role, $value in $roles {
			--color-#{$role}: #{$value};
		}
		@include color.add('primary');
		@include color.add-bg('bg');
	}
}

.u-color-bg-transparent {
	background-color: transparent;
}

.u-color-bg-sky {
	// stylelint-disable
	// need extra whitespace here to make this function readable
	background-color: #eaf4f5;
	background-image: radial-gradient(
		ellipse 90% 90% at bottom, 
		#eff4f5 0%, 
		#dde9e9 100%
	);
	// stylelint-enable
}

.u-color-bg-water {
	// stylelint-disable
	// need extra whitespace here to make this function readable
	background-image: radial-gradient(
		ellipse 70% 120% at top, 
		rgba(color.get('accent'), 0) 20%, 
		rgba(color.get('accent'), 0.08) 75%, 
		rgba(color.get('accent'), 0.21) 100%
	);
	// TODO fix this - need to convert color tokens to HSL values somehow
	// custom props for theming
	// background-image: radial-gradient(
	// 	ellipse 70% 120% at top, 
	// 	rgba(color.get-variable('accent'), 0) 20%, 
	// 	rgba(color.get-variable('accent'), 0.08) 75%, 
	// 	rgba(color.get-variable('accent'), 0.21) 100%
	// );
	// stylelint-enable
}
