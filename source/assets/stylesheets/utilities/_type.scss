@use 'sass:map';
@use '../tokens/type';
@use '../tokens/color';

// alignment
@each $position in [left, center, right] {
	.u-type-align-#{$position} {
		text-align: $position;
	}
}

// case
.u-type-case-upper {
	text-transform: uppercase;
}

// headings
h1,
h2,
h3,
h4,
h5,
h6,
.u-type-heading {
	@include type.font('display', 'bold');
	line-height: type.leading('tight');
	margin-bottom: 0;
	margin-top: 0;

	&.u-type-weight-light {
		@include type.font('display', 'light');
	}

	strong {
		color: color.get('highlight');
	}
}

// scale
h1,
.u-type-scale-alpha {
	@include type.fluid($size-min: 'beta', $size-max: 'alpha');
	letter-spacing: -0.02em;
}

h2,
.u-type-scale-beta {
	@include type.fluid($size-min: 'gamma', $size-max: 'beta');
	letter-spacing: -0.02em;
}

h3,
.u-type-scale-gamma {
	@include type.fluid($size-min: 'delta', $size-max: 'gamma');
	letter-spacing: -0.01em;
}

h4,
.u-type-scale-delta {
	@include type.fluid($size-min: 'epsilon', $size-max: 'delta');
}

h5,
.u-type-scale-epsilon {
	font-size: type.scale('epsilon');
}

h6,
.u-type-scale-zeta {
	font-size: type.scale('zeta');
}

// set font size to zero to fix whitespace bugs
.u-type-scale-zero {
	font-size: 0;
}

@each $name, $height in type.$leading {
	.u-type-leading-#{$name} {
		line-height: $height;
	}
}

// fonts, weights, styles
.u-type-font-display {
	@include type.font('display');

	.u-type-weight-light,
	&.u-type-weight-light {
		@include type.font('display', 'light');
	}

	.u-type-weight-bold,
	&.u-type-weight-bold {
		@include type.font('display', 'bold');
	}

	.u-type-weight-normal,
	&.u-type-weight-normal {
		@include type.font('display', 'normal');
	}
}

.u-type-font-default {
	@include type.font();

	.u-type-weight-bold,
	&.u-type-weight-bold {
		@include type.font($weight: 'bold');
	}

	.u-type-style-italic,
	&.u-type-style-italic {
		@include type.font($style: italic);
	}

	.u-type-weight-normal,
	&.u-type-weight-normal {
		@include type.font($weight: 'normal');
	}
}

.u-type-link-undecorated {
	border-bottom: 0;
}
