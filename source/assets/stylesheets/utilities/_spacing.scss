// Spacing utility classes
@use '../tokens/spacing';
@use '../tokens/breakpoints';
@use '../helpers';

// define spacing variables from scale tokens
:root {
  @each $name, $length in spacing.$scale {
    --space-#{$name}: #{spacing.get($name)};
  }
}

// generate utilities for each side and scale interval
@each $prop in [padding, margin] {
	.u-#{$prop} {
		#{$prop}: spacing.get();
	}

	.u-#{$prop}-x {
		#{$prop}-left: spacing.get();
		#{$prop}-right: spacing.get();
	}

	.u-#{$prop}-y {
		#{$prop}-top: spacing.get();
		#{$prop}-bottom: spacing.get();
	}

	// add space between all children on a given axis
	.u-#{$prop}-x-flow {
		> * + * {
			#{$prop}-left: spacing.get();
		}
	}

	.u-#{$prop}-y-flow {
		> * + * {
			#{$prop}-top: spacing.get();
		}
	}

	@each $name, $length in spacing.$scale {
		@if $name != 'default' {
			.u-#{$prop}-#{$name} {
				#{$prop}: spacing.get($name);
			}

			.u-#{$prop}-x-#{$name} {
				#{$prop}-left: spacing.get($name);
				#{$prop}-right: spacing.get($name);
			}

			.u-#{$prop}-y-#{$name} {
				#{$prop}-top: spacing.get($name);
				#{$prop}-bottom: spacing.get($name);
			}

			// add space flow all children on a given axis
			.u-#{$prop}-x-flow-#{$name} {
				> * + * {
					#{$prop}-left: spacing.get($name);
				}
			}

			.u-#{$prop}-y-flow-#{$name} {
				> * + * {
					#{$prop}-top: spacing.get($name);
				}
			}
		}
	}

	@each $side in helpers.$sides {
		.u-#{$prop}-#{$side} {
			#{$prop}-#{$side}: spacing.get();
		}

		@each $name, $length in spacing.$scale {
			@if $name != 'default' {
				.u-#{$prop}-#{$side}-#{$name} {
					#{$prop}-#{$side}: spacing.get($name);
				}
			}
		}

		.u-no-#{$prop}-#{$side} {
			#{$prop}-#{$side}: 0;
		}
	}

	.u-no-#{$prop} {
		#{$prop}: 0;
	}
}

// Outside spacing for containers
.u-padding-x-outside {
	padding-left: spacing.get(spacing.outside());
	padding-right: spacing.get(spacing.outside());

	@each $screen, $width in spacing.$outside {
		@if $screen != 'default' {
			@include breakpoints.query($screen) {
				padding-left: spacing.get($width);
				padding-right: spacing.get($width);
			}
		}
	}
}
